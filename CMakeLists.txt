cmake_minimum_required(VERSION 2.6)
project(GBAc)
set(BINARY_NAME gbac CACHE INTERNAL "Name of output binaries")
set(CMAKE_C_FLAGS_DEBUG "-g -Wall -Wextra -Wno-error=type-limits --std=gnu99")
set(CMAKE_C_FLAGS_RELEASE "-O3 -Wall -Wextra --std=gnu99")
set(USE_DEBUGGER ON CACHE BOOL "Whether or not to enable the ARM debugger")
set(EXTRA_LIB "")
file(GLOB ARM_SRC ${CMAKE_SOURCE_DIR}/src/arm/*.c)
file(GLOB GBA_SRC ${CMAKE_SOURCE_DIR}/src/gba/*.c)
file(GLOB UTIL_SRC ${CMAKE_SOURCE_DIR}/src/util/*.[cS])
file(GLOB RENDERER_SRC ${CMAKE_SOURCE_DIR}/src/gba/renderers/video-software.c)
include_directories(${CMAKE_SOURCE_DIR}/src/arm)
include_directories(${CMAKE_SOURCE_DIR}/src/gba)
include_directories(${CMAKE_SOURCE_DIR}/src/debugger)
include_directories(${CMAKE_SOURCE_DIR}/src/util)

find_package(SDL 1.2 REQUIRED)
file(GLOB PLATFORM_SRC ${CMAKE_SOURCE_DIR}/src/platform/sdl/sdl-*.c)
if(WIN32)
	add_definitions(-D_WIN32_WINNT=0x0600)
	file(GLOB OS_SRC ${CMAKE_SOURCE_DIR}/src/platform/windows/*.c)
else()
	add_definitions(-DUSE_PTHREADS)
	file(GLOB OS_SRC ${CMAKE_SOURCE_DIR}/src/platform/posix/*.c)
endif()
include_directories(${CMAKE_SOURCE_DIR}/src/platform/sdl)

if(USE_DEBUGGER)
	file(GLOB DEBUGGER_SRC ${CMAKE_SOURCE_DIR}/src/debugger/*.c)
	set(DEBUGGER_LIB "edit")
	add_definitions(-DUSE_DEBUGGER)
else()
	set(DEBUGGER_SRC "")
	set(DEBUGGER_LIB "")
endif()

if(BUILD_RASPI AND BUILD_EGL)
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/platform/sdl/egl-main.c)
	set(OPENGL_LIBRARY "-lEGL -lGLESv2 -lbcm_host")
	set(OPENGL_INCLUDE_DIR "")
	add_definitions(-DBUILD_RASPI)
elseif(BUILD_BBB OR BUILD_RASPI)
	enable_language(ASM)
	add_definitions(-DCOLOR_16_BIT -DCOLOR_5_6_5)
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/platform/sdl/sw-main.c)
else()
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/platform/sdl/gl-main.c)
	find_package(OpenGL REQUIRED)
	include_directories(${SDL_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR})
endif()

if(BUILD_PERF)
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/platform/perf-main.c)
	if(UNIX AND NOT APPLE)
		set(EXTRA_LIB ${EXTRA_LIB} rt)
	endif()
endif()

add_executable(${BINARY_NAME} WIN32 ${ARM_SRC} ${GBA_SRC} ${DEBUGGER_SRC} ${RENDERER_SRC} ${UTIL_SRC} ${PLATFORM_SRC} ${OS_SRC} ${MAIN_SRC})
target_link_libraries(${BINARY_NAME} m ${DEBUGGER_LIB} ${SDL_LIBRARY} ${SDLMAIN_LIBRARY} ${OPENGL_LIBRARY} ${EXTRA_LIB})
