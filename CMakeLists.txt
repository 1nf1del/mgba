cmake_minimum_required(VERSION 2.6)
project(GBAc)
set(BINARY_NAME gbac CACHE INTERNAL "Name of output binaries")
set(CMAKE_C_FLAGS_DEBUG "-g -Wall -Wextra -Wno-error=type-limits --std=gnu99")
set(CMAKE_C_FLAGS_RELEASE "-O3 -Wall -Wextra --std=gnu99")
file(GLOB ARM_SRC ${CMAKE_SOURCE_DIR}/src/arm/*.c)
file(GLOB GBA_SRC ${CMAKE_SOURCE_DIR}/src/gba/*.c)
file(GLOB UTIL_SRC ${CMAKE_SOURCE_DIR}/src/util/*.c)
file(GLOB RENDERER_SRC ${CMAKE_SOURCE_DIR}/src/gba/renderers/video-software.c)
file(GLOB DEBUGGER_SRC ${CMAKE_SOURCE_DIR}/src/debugger/*.c)
include_directories(${CMAKE_SOURCE_DIR}/src/arm)
include_directories(${CMAKE_SOURCE_DIR}/src/gba)
include_directories(${CMAKE_SOURCE_DIR}/src/debugger)
include_directories(${CMAKE_SOURCE_DIR}/src/util)
include_directories(${CMAKE_SOURCE_DIR}/third-party/linenoise)

find_package(SDL 1.2 REQUIRED)
file(GLOB SDL_SRC ${CMAKE_SOURCE_DIR}/src/sdl/sdl-*.c)
include_directories(${CMAKE_SOURCE_DIR}/src/sdl)

if(BUILD_RASPI AND BUILD_EGL)
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/egl-main.c)
	set(OPENGL_LIBRARY "-lEGL -lGLESv2 -lbcm_host")
	set(OPENGL_INCLUDE_DIR "")
	add_definitions(-DBUILD_RASPI)
elseif(BUILD_BBB OR BUILD_RASPI)
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/sdl-main.c)
else()
	set(MAIN_SRC ${CMAKE_SOURCE_DIR}/src/gl-main.c)
	find_package(OpenGL REQUIRED)
	include_directories(${SDL_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR})
endif()
include_directories(${SDL_INCLUDE_DIR} ${OPENGL_INCLUDE_DIR})

add_executable(${BINARY_NAME} ${ARM_SRC} ${GBA_SRC} ${DEBUGGER_SRC} ${RENDERER_SRC} ${UTIL_SRC} ${SDL_SRC} ${MAIN_SRC})
target_link_libraries(${BINARY_NAME} m pthread edit ${SDL_LIBRARY} ${OPENGL_LIBRARY})
